{"version":3,"sources":["init-fcm.js","App.js","register-sw.js","index.js"],"names":["messaging","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","usePublicVapidKey","renderNotification","notification","i","key","JSON","stringify","registerPushListener","pushNotification","navigator","serviceWorker","addEventListener","data","console","log","compose","withState","withHandlers","setNotifications","notifications","newNotification","concat","lifecycle","componentDidMount","props","setToken","requestPermission","then","getToken","token","catch","err","map","register","registration","scope","ReactDOM","render","document","getElementById"],"mappings":";2OAcMA,G,MAXyBC,IAASC,cAAc,CACpDC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,yDACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGwBV,aAEzCA,EAAUW,kBACR,2F,ozMCbF,IAAMC,EAAqB,SAACC,EAAcC,GAAf,OAAqB,wBAAIC,IAAKD,GAAIE,KAAKC,UAAUJ,KAEtEK,EAAuB,SAAAC,GAAgB,OAC3CC,UAAUC,cAAcC,iBAAiB,WAAW,YAAc,IAAXC,EAAU,EAAVA,KACrDJ,EACEI,GAEFC,QAAQC,IAAIF,OAiBDG,cACbC,YAAU,QAAS,WAAY,IAC/BA,YAAU,gBAAiB,mBAAoB,IAC/CC,YAAa,CACXT,iBAAkB,gBAChBU,EADgB,EAChBA,iBACAC,EAFgB,EAEhBA,cAFgB,OAGZ,SAAAC,GAEFF,EAAiBC,EAAcE,OAAOD,IACtCP,QAAQC,IAAIM,OAGlBE,YAAU,CACFC,kBADE,WACmB,IAAD,8HACe,EAAKC,MAApChB,EADgB,EAChBA,iBAAkBiB,EADF,EACEA,SAE1BpC,EACGqC,oBACAC,KAFH,sBAEQ,oGACgBtC,EAAUuC,WAD1B,OACEC,EADF,OAEJJ,EAASI,GAFL,4CAILC,OAAM,SAASC,GACdlB,QAAQC,IAAI,sCAAuCiB,MAGvDxB,EAAqBC,GAbG,gDAdfO,EAbH,SAAC,GAAD,IAAGc,EAAH,EAAGA,MAAOV,EAAV,EAAUA,cAAV,OACV,oCACE,qFACA,kDACoB,2BAAIU,IAExB,kDAEGV,EAAca,IAAI/B,QCtBnB,kBAAmBQ,WACrBA,UAAUC,cACPuB,SAAS,8BACTN,MAAK,SAASO,GACbrB,QAAQC,IAAI,qCAAsCoB,EAAaC,UAEhEL,OAAM,SAASC,GACdlB,QAAQC,IAAI,6CAA8CiB,MCDlEK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fcdc1a4b.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/messaging\";\n\nconst initializedFirebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyBi3D5x2WmaZT1Lvjql_4Ei9kWW1EY8yEE\",\n  authDomain: \"ryan-project-a5300.firebaseapp.com\",\n  databaseURL: \"https://ryan-project-a5300-default-rtdb.firebaseio.com\",\n  projectId: \"ryan-project-a5300\",\n  storageBucket: \"ryan-project-a5300.appspot.com\",\n  messagingSenderId: \"353195216368\",\n  appId: \"1:353195216368:web:73347b89368a97f8c42135\",\n  measurementId: \"G-GPC3WVX4LG\"\n});\n\nconst messaging = initializedFirebaseApp.messaging();\n\nmessaging.usePublicVapidKey(\n  \"BIooMP1bavvv75X5G_XV9r3yTtMXyQL33rfgBUA73m_7sIhx0Ie8vqCc4DLLC7CQuYKHoxsQVBONOqLoPzDqQDM\"\n);\n\nexport { messaging };\n","import React from \"react\";\nimport { messaging } from \"./init-fcm\";\nimport { compose, lifecycle, withHandlers, withState } from \"recompose\";\n\nconst renderNotification = (notification, i) => <li key={i}>{JSON.stringify(notification)}</li>;\n\nconst registerPushListener = pushNotification =>\n  navigator.serviceWorker.addEventListener(\"message\", ({ data }) =>{\n    pushNotification(\n      data\n    )\n    console.log(data)\n  }\n  );\n\nconst App = ({ token, notifications }) => (\n  <>\n    <h1>React + Firebase Cloud Messaging (Push Notifications)</h1>\n    <div>\n      Current token is: <p>{token}</p>\n    </div>\n    <ul>\n      Notifications List:\n      {notifications.map(renderNotification)}\n    </ul>\n  </>\n);\n\nexport default compose(\n  withState(\"token\", \"setToken\", \"\"),\n  withState(\"notifications\", \"setNotifications\", []),\n  withHandlers({\n    pushNotification: ({\n      setNotifications,\n      notifications\n    }) => newNotification =>\n      {\n        setNotifications(notifications.concat(newNotification))\n        console.log(newNotification)\n      }\n  }),\n  lifecycle({\n    async componentDidMount() {\n      const { pushNotification, setToken } = this.props;\n\n      messaging\n        .requestPermission()\n        .then(async function() {\n          const token = await messaging.getToken();\n          setToken(token);\n        })\n        .catch(function(err) {\n          console.log(\"Unable to get permission to notify.\", err);\n        });\n\n      registerPushListener(pushNotification);\n    }\n  })\n)(App);","const registerServiceWorker = () => {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker\n      .register(\"./firebase-messaging-sw.js\")\n      .then(function(registration) {\n        console.log(\"Registration successful, scope is:\", registration.scope);\n      })\n      .catch(function(err) {\n        console.log(\"Service worker registration failed, error:\", err);\n      });\n  }\n};\n\nexport { registerServiceWorker };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { registerServiceWorker } from \"./register-sw\";\nimport App from \"./App\";\n\nregisterServiceWorker();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}